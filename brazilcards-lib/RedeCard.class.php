<?php
/**
 * Project:  Webservice Consumer on Brazilian Credit Card Operators
 * File:     Cielo.class.php
 *
 * This code is released under the Creative Commons CC BY-NC 3.0 
 * Visit http://creativecommons.org/licenses/by-nc/3.0/br/ for more information
 * on this licence.
 *
 * You are required to purchase a license permission for comercial use of this code.
 *
 * @file Main Class for Cielo's webservice consumer
 * @copyright 2011 Drupalista.com.br 
 * @author Francisco Luz <franciscoferreiraluz at yahoo dot com dot au>
 * @package BrazilCards
 * @version 1.0 Alpha
 * @license http://creativecommons.org/licenses/by-nc/3.0/br/ CC BY-NC 3.0 
 * 
 *  --------------------------------H I R I N G   M E ---------------------------------------------------
 *  
 * - I am available for freelancing jobs and casual employment.
 *   (I speak both english and portuguese fluently, portuguese being my native tongue)
 * - My services include, but not limited to, training sessions on Drupal for business enterprises,
 *   individuals and professionals in the IT / Webdevelopment industry;
 *    # Drupal consulting and module development;
 *    # Deploying and implementing solutions like:
 *        1. Open Public (http://openpublicapp.com), ideal for local goverment websites and
 *           goverment agencies in general.
 *        2. Open Publish (http://openpublishapp.com), this is a perfect fit for media websites such as
 *           Tv Networks, News and Magazines.
 *
 *   Contact me via
 *   E-mail: contato at drupalista dot com dot br
 *   Phone: +55 66 3521 9132 (Business hours, my time zone is Cuiaba, Brazil GMT -4)
 *   Mobile: +55 66 9245 5809
 *
 *   Social Media
 *   Twitter: @drupalista_br
 *   Youtube Channel: http://www.youtube.com/user/Drupalista
 *   Github: 
 *
 *   Francisco Luz
 *   July 2011
 */

class RedeCard extends BrazilCards {

    private $server;

    public function setUp(){
        /** Set Defaults **/
        $this->membership['IATA'] = '';        
        
        /** Webservice settings **/
        //define defaut values for both test and live services
        $test = array('url'      => 'https://ecommerce.redecard.com.br/pos_virtual/wskomerci/cap_teste.asmx',
                      'USR'      => 'testews',
                      'PWD'      => 'testews',
                      'suffix'   => 'Tst', //this gotta be appended to the end of the webservice method name
                      );
        $live = array('url'    => 'https://ecommerce.redecard.com.br/pos_virtual/wskomerci/cap.asmx',
                      'suffix' => '',
                      );
        //apply values to ws property    
        $ws       = ($this->is_test)?'test':'live';
        $this->ws = ${$ws};
        
        //payment receipt
        $this->ws['url_receipt'] = 'https://ecommerce.redecard.com.br/pos_virtual/cupom.asp';
        
        //manual version
        $this->ws['manual_version'] = '2.5 Last Updated at Sep 20 2010';

        //connect with remote service
        try{
            $this->server = new SoapClient($this->ws['url'].'?wsdl');
        }catch(SoapFault $e){
             Drupalista_BPM::setWarning(array('exception', $e));
        }
    }

    public function authorize($parameters){
        //save parameters property
        $this->parameters = $parameters;

        $parameters['Filiacao']     = $this->membership['filiacao'];     //  9 Supplying store membership number
        $parameters['NumPedido']    = $this->order['pedido'];            // 16 Order number generated by the merchant
        $parameters['IATA']         = $this->membership['IATA'];         //  9 Optional parameter for Airline Companies. N/A â€“ Send parameter blank
        $parameters['Distribuidor'] = $this->membership['distribuidor']; //  9 Membership number of distributing store / card issuer, when B2B
        

        
        //compose method name
        $methodName = 'GetAuthorized'.$this->ws['suffix'];
        //call websevice method
        $response = $this->server->$methodName($parameters);
        
        //save response
        $methodName = $methodName.'Result';
        $this->response['authorize'] = new SimpleXMLElement($response->$methodName->any);

    }
 
    public function capture($parameters){
        
        
    }
    
    public function capturePreAuthorize($parameters){
        
        
    }
    
    public function voidTransaction($parameters){
        
        
    }
    
}
?>
